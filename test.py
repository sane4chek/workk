# # Мы можем использовать функцию type(), чтобы узнать класс переменной или значения, и функцию isinstance() для проверки принадлежности объекта определённому классу
#
# first_name = "ada"
# last_name = "lovelace"
# full_name = f"{first_name} {last_name}"
# print(f"Hello, {full_name.title()}!")
#
# # Разрывы строк добавляются с помощью комбинации символов \n:
# print("Languages:\nPython\nC\nJavaScript")
# # Languages:
# # Python
# # C
# # JavaScript
#
#
# print("hello world!")  # * - умножение, ** - степень,  str - строка
# print(2)  # int - число
# print(True, False)  # true - верно false - неверно, bool - правильно, не правильно
# print(2.1 ** 6.8)  # float - число с плавающей точкой
# print('я люблю покушать'.upper())  # Upper - перевод в верхний регистор
# print('я люблю покушать'.upper().lower())  # lower - перевод в нижний регистор
# print('я люблю покушать'.replace("люблю", "не люблю"))  # replace - метод для замены символов
# print(type("hello world!"))  # type() команда выводит нам класс перемeнной или значение строки
#
# # вывод части строки на экран или на простом "Срезы"
#
# example = 'Нравятсяигры'
# print(example[0])  # нумерация начинается с нуля
# print(example[-1])  # нумерация с конца начинается с -1
# print(example[6:13])
# print(example[::-1])  # слово пишется с конца
# print(example[1::2])  # выводится через букву начиная со второй
#
# # Списки. Индексация и методы списков
#
# food = ['apple', 'banana', 'coconut']
# print(food[0])
# food[0] = 'peach'
# print(food)
# food.append('True')  # команда (. appened) добавляеет в конец списка введенное слово
# print(food)
# food.extend('string')  # команда  (. extend) добавляет в конец списка каждый введенный символ отдельно
# print(food)
# food.extend(['string', 2])  # команда передает последовательность и добавляет элементы в конец списка
# print(food)
# food.remove('banana')  # команда (.remove) убирает введенный элемент из списка
# print(food)
# print('coconut' in food)  # команда (in) проверяет присувствует ли элемент в нашем списке
# print(food[0:2:2])
#
# # картедж
#
# typle_ = 1, 2, 3, 4, True, 'string'  # картеж
# print(typle_)
# print(typle_.__sizeof__())  # команда для проверки памяти (__sizeof__)
#
# listA = [11, 18, 19, 21, 32]
# print(sum(listA))  # команда sum() выводит сумму всех чисел в переменной
#
# listA = [11, 18, 19, 21, 32]
# print(len(listA))  # команда len() выводит общее количество символов в переменной
#
# # Условная конструкция. Операторы if, elif, else
#
# # name = input('Введите ваше имя:')
# # if name == 'Urban':
# #    print('Здравствуйте, администратор!')
# # if name == 'Denis':
# #    print('Здравствуйте, преподователь!')
# # else:
# #    print('Привет', name)
# # number = int(input("Введите число: "))
# # if number % 3 == 0 and number % 5 == 0:
# #    print("FizzBuzz")
# # elif number % 3 == 0:
# #    print('Fizz')
# # elif number % 5 == 0:
# #    print('Buzz')
# # else:
# #    print('Число не подходит!')
#
#
# # Чтобы создать условие, мы используем оператор if, после которого идёт само условие.
# # Дабы избежать вот таких двойных выводов, мы можем добавить еще одну команду - else, что переводится как иначе. После этой команды сразу идет двоеточие, то есть никаких условий дополнительно прописывать не надо.
#
#
# # Стиль кода 1.2. Цикл While (Циклы — это команды, которые повторяют другие команды.)
# # мы можем использовать оператор break, который прервёт выполнение цикла
# # continue
# # Операторы break и continue применяются, как к циклу while, так и к циклу for, о котором мы поговорим на следующем занятии.
#
# # Символ новой строки ("\n") во второй команде print вставляет пустую строку после каждого прохода цикла.
#
# names = "саня", "вася", "попа", "юра"
# for name in names:
#     print(f"{name.title()} очень хорошо играют в баскетбол\n")
#
#
# def get_matrix_2():
#     for i in range(2):
#         print("внешний цикл")
#         for j in range(3):
#             print("    внутренний цикл")
#             for k in range(1):
#                 print("         валидол")
#
#
# get_matrix_2()
#
# while 1 > 0:
#     number = int(input("Введите число: "))
#     if number % 2 == 0:
#         print("Четное число")
#         continue
#     else:
#         print("Нечетное число")
#     print("Меня не забыли")
# print("Sasha Hello")
from tkinter.font import names


# len() - возвращает длину переменной
# type() - возвращает тип данных переменной
# int() - число без точки (целое)
# float() - число с плавающей точкой
# bool() - логическое значение
# str() - строка
# list() - список
# tuple() - кортеж
# dict() - словарь
# set() - множества
# round() - округляет
# zip() - возвращает объект с которым мы работаем
# id() - показывает уникальный номер объекта


# salary = [2300, 1800.9123, 5000, 1234.35436, 7500.12354]
# print(round(sum(salary) / len(salary), 2), '-средняя зп в конторе')
# print(round(max(salary), 2), '- maks zp')
# print(round(min(salary), 2), '- min zp')
#
# names_1 = ['денис', 'саша', 'вася', 'петя', 'игорь']
# zipped = dict(zip(names_1, salary))
# print(zipped['денис'], " - zp denisa")

# help() - напоминает как работать со списками
# any() - работает как or (нестрогая)
# all() - работает как and (строгая)


